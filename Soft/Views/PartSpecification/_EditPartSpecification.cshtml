@using HaSe.Pages.Controls
@using HaSe.Facade.Project
@model HaSe.Facade.Project.PartSpecificationViewModel

@Html.EditItem(model => model.Description)

<dt class="col-sm-2"><label class="control-label" for="Type">Type</label></dt>

<dd class="col-sm-10">
    <select asp-for="Type" class="form-control">
        <option value="">-- Select Type --</option>
        <option value="Constraint">Constraint</option>
        <option value="Operating condition">Operating condition</option>
        <option value="Tolerance">Tolerance</option>
        <option value="Performance specification">Performance specification</option>
        <option value="Testing requirement">Testing requirement</option>
        <option value="Other specification">Other specification</option>
    </select>
    <span asp-validation-for="Type" class="text-danger" />
</dd>

@{
    ShowTableProperties<TEntity> create<TEntity>() {
        var p = new ShowTableProperties<TEntity>(ViewBag);
        p.MasterController = "partspecification";
        p.MasterId = Model?.Id;
        p.IsEditable = true;
        return p;
    }
    var p1 = create<PartSpecificationStatusViewModel>();
    p1.Items = Model?.SpecificationStatus ?? [];
    p1.Controller = "partspecificationstatus";
    p1.Label = Html.LabelFor(model => model.SpecificationStatus);

    var p2 = create<PartSpecificationRoleViewModel>();
    p2.Items = Model?.SpecificationRole ?? [];
    p2.Controller = "partspecificationrole";
    p2.Label = Html.LabelFor(model => model.SpecificationRole);
}

@Html.EditItem(model => model.DateDocumented)
@Html.EditItem(model => model.Comment)
@Html.SelectItem(model => model.PartId, "Parts")

@if (ViewBag.IsEditView != null && ViewBag.IsEditView == true) {
    @Html.ShowTable(p1)
    @Html.ShowTable(p2)
}



